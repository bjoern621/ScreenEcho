.container {
    border-radius: 10px;

    min-width: 300px;
    aspect-ratio: 16 / 9; // 2944 x 1840

    // height: 100%;
    // min-height: 100px;
    // max-height: 600px; // set this via js?

    overflow: hidden;

    box-shadow: 0 1px 3px 0 var(--shadow), 0 1px 2px -1px var(--shadow);

    border: 1px;
    border-color: var(--border);
    border-style: solid;

    flex: 1;

    // flex: 1 0 300px;
    // flex: 1; // flex until one row is filled after one row is filled (second row started) dont fill space, meh actually fill but only to max width of 'first row'
    // irgendwie wie oft passt min-width in alles? wie nicht komplett passt einen weniger und das skalieren, danach also wieder alle gleich breit
    // diese breite ist dann alles / anzahl wie viele passen (+gaps?)

    // flex: 1 0 0; // 1 0 0

    position: relative;
}

.video {
    width: 100%;
    height: 100%;
}

.loading-container {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

$overlay-show-delay: 0.1s;
$overlay-elements-show-delay: $overlay-show-delay + 0.3s;

$overlay-elements-hide-delay: 0.2s;
$overlay-hide-delay: $overlay-elements-hide-delay + 0.2s;

.overlay {
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    &:hover {
        box-shadow: inset 0 -55px 35px -35px rgba(0, 0, 0, 0.5),
            inset 0 55px 35px -35px rgba(0, 0, 0, 0.5);
    }

    transition: box-shadow 0.3s ease-out;
    transition-delay: $overlay-show-delay;

    &:not(:hover) {
        transition-delay: $overlay-hide-delay;
    }
}

%top-left {
    position: absolute;
    top: 10px;
    left: 10px;
}

%top-right {
    position: absolute;
    top: 10px;
    right: 10px;
}

%bottom-left {
    position: absolute;
    bottom: 10px;
    left: 10px;
}

%bottom-right {
    position: absolute;
    bottom: 10px;
    right: 10px;
}

%overlay-element {
    transition-property: transform, opacity;
    transition-duration: 0.2s;
    transition-timing-function: ease-out;
    transition-delay: $overlay-elements-show-delay;

    .overlay:not(:hover) & {
        transition-delay: $overlay-elements-hide-delay;
    }
}

%overlay-element-top {
    @extend %overlay-element;

    .overlay:not(:hover) & {
        transform: translateY(-5px);
        opacity: 0;
    }
}

%overlay-element-bottom {
    @extend %overlay-element;

    .overlay:not(:hover) & {
        transform: translateY(5px);
        opacity: 0;
    }
}

%hover-shadow {
    border-radius: 10px;

    &:hover {
        background-color: rgba(0, 0, 0, 0.8);
    }
}

%overlay-text-element {
    background-color: var(--white);
    color: var(--black);
    padding: 2px 10px;
    border-radius: 999px;
}

.streamer-display-name {
    @extend %top-left;
    @extend %overlay-element-top;
    @extend %overlay-text-element;
}

.stream-quality {
    @extend %top-right;
    @extend %overlay-element-top;
    @extend %overlay-text-element;
}

.hide-stream-button {
    @extend %overlay-element-bottom;
    @extend %hover-shadow;

    position: absolute;
    bottom: 0;
    left: 50%;
    translate: -50%;

    width: 40px;
}

.fullscreen-button {
    @extend %overlay-element-bottom;
    @extend %hover-shadow;

    position: absolute;
    bottom: 2px;
    right: 5px;

    width: 40px;
}
